CONFIG
├── train
│   └── seed: 2222                                                              
│       name: null                                                              
│       interval: step                                                          
│       monitor: val/accuracy                                                   
│       mode: max                                                               
│       ema: 0.0                                                                
│       test: false                                                             
│       debug: false                                                            
│       ignore_warnings: false                                                  
│       state:                                                                  
│         mode: null                                                            
│         n_context: 0                                                          
│         n_context_eval: 0                                                     
│       ckpt: null                                                              
│       disable_dataset: false                                                  
│       validate_at_start: false                                                
│       pretrained_model_path: null                                             
│       pretrained_model_strict_load: true                                      
│       pretrained_model_state_hook:                                            
│         _name_: null                                                          
│       post_init_hook:                                                         
│         _name_: null                                                          
│       layer_decay:                                                            
│         _name_: null                                                          
│         decay: 0.7                                                            
│                                                                               
├── tolerance
│   └── logdir: ./resume                                                        
│       id: null                                                                
│                                                                               
├── wandb
│   └── project: TNLM                                                           
│       group: ''                                                               
│       job_type: training                                                      
│       mode: online                                                            
│       save_dir: .                                                             
│       id: null                                                                
│       name: ttlm-mnist1-v1-complex-inside1                                    
│                                                                               
├── trainer
│   └── accelerator: gpu                                                        
│       strategy: null                                                          
│       devices: 1                                                              
│       accumulate_grad_batches: 1                                              
│       max_epochs: 100                                                         
│       gradient_clip_val: null                                                 
│       log_every_n_steps: 1                                                    
│       limit_train_batches: 1.0                                                
│       limit_val_batches: 1.0                                                  
│       enable_model_summary: false                                             
│       track_grad_norm: 2                                                      
│       precision: 32                                                           
│                                                                               
├── loader
│   └── batch_size: 50                                                          
│       num_workers: 4                                                          
│       pin_memory: true                                                        
│       drop_last: true                                                         
│                                                                               
├── dataset
│   └── _name_: mnist                                                           
│       permute: true                                                           
│       val_split: 0.1                                                          
│       seed: 42                                                                
│                                                                               
├── task
│   └── _name_: base                                                            
│       loss: cross_entropy                                                     
│       metrics:                                                                
│       - accuracy                                                              
│       torchmetrics: null                                                      
│                                                                               
├── optimizer
│   └── _name_: adamw                                                           
│       lr: 0.0003                                                              
│       weight_decay: 0.05                                                      
│       betas:                                                                  
│       - 0.9                                                                   
│       - 0.999                                                                 
│                                                                               
├── scheduler
│   └── _name_: cosine_warmup                                                   
│       num_warmup_steps: 10800                                                 
│       num_training_steps: 108000                                              
│                                                                               
├── encoder
│   └── linear                                                                  
├── decoder
│   └── _name_: sequence                                                        
│       mode: pool                                                              
│                                                                               
├── model
│   └── layer:                                                                  
│         cell:                                                                 
│           _name_: ttlm                                                        
│           d_input: 384                                                        
│           lr: 7.5e-05                                                         
│         _name_: ttlm                                                          
│         return_output: true                                                   
│       _name_: model                                                           
│       prenorm: false                                                          
│       transposed: false                                                       
│       n_layers: 1                                                             
│       d_model: 384                                                            
│       bidirectional: false                                                    
│       residual: R                                                             
│       pool: null                                                              
│       norm: batch                                                             
│       dropout: 0.2                                                            
│       tie_dropout: false                                                      
│       track_norms: true                                                       
│       encoder: null                                                           
│       decoder: null                                                           
│                                                                               
└── callbacks
    └── learning_rate_monitor:                                                  
          logging_interval: step                                                
        timer:                                                                  
          step: true                                                            
          inter_step: false                                                     
          epoch: true                                                           
          val: true                                                             
        params:                                                                 
          total: true                                                           
          trainable: true                                                       
          fixed: true                                                           
        model_checkpoint:                                                       
          monitor: val/accuracy                                                 
          mode: max                                                             
          save_top_k: 1                                                         
          save_last: true                                                       
          dirpath: checkpoints/                                                 
          filename: val/accuracy                                                
          auto_insert_metric_name: false                                        
          verbose: true                                                         
        rich_model_summary:                                                     
          max_depth: 1                                                          
        rich_progress_bar:                                                      
          refresh_rate: 1                                                       
          leave: true                                                           
                                                                                
[rank: 0] Global seed set to 2222
wandb: Currently logged in as: yuqinzhou. Use `wandb login --relogin` to force relogin
wandb: wandb version 0.15.8 is available!  To upgrade, please run:
wandb:  $ pip install wandb --upgrade
wandb: Tracking run with wandb version 0.15.4
wandb: Run data is saved locally in ./wandb/run-20230815_110842-dk2vzcni
wandb: Run `wandb offline` to turn off syncing.
wandb: Syncing run ttlm-mnist1-v1-complex-inside1
wandb: ⭐️ View project at https://wandb.ai/yuqinzhou/TNLM
wandb: 🚀 View run at https://wandb.ai/yuqinzhou/TNLM/runs/dk2vzcni
[2023-08-15 11:08:46,642][__main__][INFO] - Instantiating callback <pytorch_lightning.callbacks.LearningRateMonitor>
[2023-08-15 11:08:46,644][__main__][INFO] - Instantiating callback <src.callbacks.timer.Timer>
[2023-08-15 11:08:46,648][__main__][INFO] - Instantiating callback <src.callbacks.params.ParamsLog>
[2023-08-15 11:08:46,650][__main__][INFO] - Instantiating callback <pytorch_lightning.callbacks.ModelCheckpoint>
[2023-08-15 11:08:46,651][__main__][INFO] - Instantiating callback <pytorch_lightning.callbacks.RichModelSummary>
[2023-08-15 11:08:46,652][__main__][INFO] - Instantiating callback <pytorch_lightning.callbacks.RichProgressBar>
GPU available: True (cuda), used: True
TPU available: False, using: 0 TPU cores
IPU available: False, using: 0 IPUs
HPU available: False, using: 0 HPUs
`Trainer(limit_train_batches=1.0)` was configured so 100% of the batches per epoch will be used..
`Trainer(limit_val_batches=1.0)` was configured so 100% of the batches will be used..
LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]
NOTE: no dropout inside recurrent cell
SequenceLightningModule(
  (model): SequenceModel(
    (drop): Identity()
    (layers): ModuleList(
      (0): SequenceResidualBlock(
        (layer): RNN(
          (cell): TTLM()
        )
        (residual): Residual()
        (norm): Normalization(
          (norm): BatchNorm1d(384, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
        )
        (drop): Dropout(p=0.2, inplace=False)
        (output_linear): Sequential(
          (0): Conv1d(384, 768, kernel_size=(1,), stride=(1,))
          (1): GLU(dim=-2)
        )
        (activation): GELU(approximate=none)
      )
    )
    (norm): Identity()
  )
  (encoder): Linear(
    (0): Linear(in_features=1, out_features=384, bias=True)
  )
  (decoder): SequenceDecoder(
    (0): SequenceDecoder(
      (output_transform): Linear(in_features=384, out_features=10, bias=True)
    )
  )
)
Hyperparameter groups [{'weight_decay': 0.0, 'lr': 7.5e-05}]
[2023-08-15 11:08:48,261][__main__][INFO] - Optimizer group 0 | 8 tensors | lr 0.0003 | weight_decay 0.05
[2023-08-15 11:08:48,262][__main__][INFO] - Optimizer group 1 | 4 tensors | lr 7.5e-05 | weight_decay 0.0
┏━━━┳━━━━━━━━━┳━━━━━━━━━━━━━━━━━┳━━━━━━━━┓
┃   ┃ Name    ┃ Type            ┃ Params ┃
┡━━━╇━━━━━━━━━╇━━━━━━━━━━━━━━━━━╇━━━━━━━━┩
│ 0 │ model   │ SequenceModel   │  886 K │
│ 1 │ encoder │ Linear          │    768 │
│ 2 │ decoder │ SequenceDecoder │  3.9 K │
└───┴─────────┴─────────────────┴────────┘
Trainable params: 890 K                                                         
Non-trainable params: 0                                                         
Total params: 890 K                                                             
Total estimated model params size (MB): 3                                       
SLURM auto-requeueing enabled. Setting signal handlers.
[2023-08-15 11:08:48,279][__main__][INFO] - Loaded 'val' dataloader:         6000 examples |    120 steps
[2023-08-15 11:08:48,280][__main__][INFO] - Loaded 'test' dataloader:       10000 examples |    200 steps

Error executing job with overrides: ['experiment=mnist/ttlm-mnist', 'wandb.name=ttlm-mnist1-v1-complex-inside1']
Traceback (most recent call last):
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/runpy.py", line 196, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "/home/qvk729/Master_thesis/train.py", line 716, in <module>
    main()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/main.py", line 94, in decorated_main
    _run_hydra(
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/utils.py", line 394, in _run_hydra
    _run_app(
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/utils.py", line 457, in _run_app
    run_and_report(
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/utils.py", line 223, in run_and_report
    raise ex
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/utils.py", line 220, in run_and_report
    return func()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/utils.py", line 458, in <lambda>
    lambda: hydra.run(
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/_internal/hydra.py", line 132, in run
    _ = ret.return_value
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/core/utils.py", line 260, in return_value
    raise self._return_value
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/hydra/core/utils.py", line 186, in run_job
    ret.return_value = task_function(task_cfg)
  File "/home/qvk729/Master_thesis/train.py", line 712, in main
    train(config)
  File "/home/qvk729/Master_thesis/train.py", line 696, in train
    trainer.fit(model)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 608, in fit
    call._call_and_handle_interrupt(
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/call.py", line 38, in _call_and_handle_interrupt
    return trainer_fn(*args, **kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 650, in _fit_impl
    self._run(model, ckpt_path=self.ckpt_path)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1112, in _run
    results = self._run_stage()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1191, in _run_stage
    self._run_train()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1204, in _run_train
    self._run_sanity_check()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1276, in _run_sanity_check
    val_loop.run()
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/loops/dataloader/evaluation_loop.py", line 152, in advance
    dl_outputs = self.epoch_loop.run(self._data_fetcher, dl_max_batches, kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/loops/loop.py", line 199, in run
    self.advance(*args, **kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 137, in advance
    output = self._evaluation_step(**kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/loops/epoch/evaluation_epoch_loop.py", line 234, in _evaluation_step
    output = self.trainer._call_strategy_hook(hook_name, *kwargs.values())
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/trainer/trainer.py", line 1494, in _call_strategy_hook
    output = fn(*args, **kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/pytorch_lightning/strategies/strategy.py", line 390, in validation_step
    return self.model.validation_step(*args, **kwargs)
  File "/home/qvk729/Master_thesis/train.py", line 445, in validation_step
    loss = self._shared_step(
  File "/home/qvk729/Master_thesis/train.py", line 323, in _shared_step
    x, y, w = self.forward(batch)
  File "/home/qvk729/Master_thesis/train.py", line 304, in forward
    x, state = self.model(x, **w, state=self._state)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/qvk729/Master_thesis/src/models/sequence/backbones/model.py", line 127, in forward
    outputs, state = layer(outputs, *args, state=prev_state, **kwargs)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/qvk729/Master_thesis/src/models/sequence/backbones/block.py", line 115, in forward
    y_for, new_state = self.layer(y, state=state, **kwargs) #(B, L, H)
  File "/home/qvk729/miniconda3/envs/TNLM_new/lib/python3.10/site-packages/torch/nn/modules/module.py", line 1130, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/qvk729/Master_thesis/src/models/sequence/rnns/rnn.py", line 48, in forward
    output, new_state = self.step(input, state)
  File "/home/qvk729/Master_thesis/src/models/sequence/rnns/rnn.py", line 58, in step
    return self.cell.step(x, state)
  File "/home/qvk729/Master_thesis/src/models/sequence/rnns/cells/basic.py", line 73, in step
    return self.forward(x, state)
  File "/home/qvk729/Master_thesis/src/models/sequence/rnns/cells/basic.py", line 285, in forward
    hidden_out = (self.C @ hidden).real * self.D @ input
RuntimeError: The size of tensor a (50) must match the size of tensor b (384) at non-singleton dimension 1
wandb: Waiting for W&B process to finish... (failed 1). Press Control-C to abort syncing.
wandb: 🚀 View run ttlm-mnist1-v1-complex-inside1 at: https://wandb.ai/yuqinzhou/TNLM/runs/dk2vzcni
wandb: Synced 6 W&B file(s), 0 media file(s), 0 artifact file(s) and 0 other file(s)
wandb: Find logs at: ./wandb/run-20230815_110842-dk2vzcni/logs
